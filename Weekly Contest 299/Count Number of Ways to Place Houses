'''
https://leetcode.com/contest/weekly-contest-299/problems/count-number-of-ways-to-place-houses/
'''
*** Approach 1(Fibonacci Series) ****

class Solution:
    def countHousePlacements(self, n: int) -> int:
        x1=2
        x2=3
        if n==1:
            return x1*x1
        if n==2:
            return x2*x2
        else:
            while n>2:
                x3=x1+x2
                x1=x2
                x2=x3
                n-=1
            return x3*x3 % (10**9+7)
            
**** Approach 2 DP ****

class Solution:
    def countHousePlacements(self, n: int) -> int:        
        dp=[0 for i in range(n+1)]
        dp[0]=1
        for i in range(1,n+1):
            if i-2>=0:
                dp[i]=dp[i-1]+dp[i-2]
            else:
                dp[i]=dp[i-1]+1
        return dp[-1]*dp[-1] % (10**9+7)
